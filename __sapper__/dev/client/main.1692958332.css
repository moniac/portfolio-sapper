h1.svelte-13vgy2g,p.svelte-13vgy2g{margin:0 auto}h1.svelte-13vgy2g{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-13vgy2g{margin:1em auto}@media(min-width: 480px){h1.svelte-13vgy2g{font-size:4em}}
header.svelte-xxwxiz.svelte-xxwxiz{background-image:linear-gradient(225deg, #010220 0%, #000000 100%);height:80vh;overflow:hidden;position:relative;display:flex;flex-direction:column;justify-content:space-between}.wave1.svelte-xxwxiz.svelte-xxwxiz{position:absolute;bottom:-25%;width:100%;animation:svelte-xxwxiz-wave 4s ease infinite alternate;z-index:1}.wave2.svelte-xxwxiz.svelte-xxwxiz{position:absolute;bottom:-20%;width:100%;animation:svelte-xxwxiz-wave 2s ease infinite alternate, svelte-xxwxiz-hue 5s ease infinite;animation-delay:0.2s;z-index:1}.wave1.svelte-xxwxiz.svelte-xxwxiz,.wave2.svelte-xxwxiz.svelte-xxwxiz{min-width:1200px}.intro.svelte-xxwxiz.svelte-xxwxiz{z-index:99}.figure-holder.svelte-xxwxiz.svelte-xxwxiz{display:flex;margin-top:4rem;z-index:10}.figure-holder.svelte-xxwxiz>.svelte-xxwxiz{margin-left:2rem}.square.svelte-xxwxiz.svelte-xxwxiz{height:82px;width:82px;opacity:0.4;transform:rotate(45deg);border:10px solid #ffffff;filter:blur(12px);animation:svelte-xxwxiz-rotate 8s linear infinite;margin-left:80px;z-index:1}.triangle.svelte-xxwxiz.svelte-xxwxiz{opacity:0.9;animation:svelte-xxwxiz-hover 4s ease alternate infinite;margin-top:4rem}.polygon.svelte-xxwxiz.svelte-xxwxiz{opacity:0.9;animation:svelte-xxwxiz-rotate 5s linear infinite reverse;filter:blur(8px);width:6rem;transform-origin:50% 80%;height:4rem}.waves.svelte-xxwxiz.svelte-xxwxiz{opacity:0.6;z-index:0}.header-holder.svelte-xxwxiz.svelte-xxwxiz{display:flex;flex-direction:column-reverse}.logo_container.svelte-xxwxiz.svelte-xxwxiz{max-height:52px;display:flex}.logo_container > img{max-height:52px}@media(min-width: 768px){header.svelte-xxwxiz.svelte-xxwxiz{clip-path:polygon(0 0, 100% 0, 100% 80%, 0% 100%);min-height:800px}.header-holder.svelte-xxwxiz.svelte-xxwxiz{flex-direction:row}.figure-holder.svelte-xxwxiz.svelte-xxwxiz{margin-top:-15rem;margin-right:10rem;margin-left:auto}.wave1.svelte-xxwxiz.svelte-xxwxiz{bottom:-20%}.wave2.svelte-xxwxiz.svelte-xxwxiz{bottom:-15%}}@media(min-width: 1000px){.wave1.svelte-xxwxiz.svelte-xxwxiz{bottom:-30%}.wave2.svelte-xxwxiz.svelte-xxwxiz{bottom:-20%}}@media(min-width: 2000px){.wave1.svelte-xxwxiz.svelte-xxwxiz{bottom:-45%}.wave2.svelte-xxwxiz.svelte-xxwxiz{bottom:-35%}}@keyframes svelte-xxwxiz-hover{from{transform:translateY(0)}to{transform:translateY(-20%)}}@keyframes svelte-xxwxiz-rotateStep{0%{transform:rotate(0)}20%{transform:rotate(72deg)}40%{transform:rotate(144deg)}60%{transform:rotate(216deg)}80%{transform:rotate(288deg)}100%{transform:rotate(360deg)}}@keyframes svelte-xxwxiz-rotate{from{transform:rotate(0)}to{transform:rotate(1turn)}}@keyframes svelte-xxwxiz-hue{from{-webkit-filter:hue-rotate(0deg)}to{-webkit-filter:hue-rotate(-360deg)}}@keyframes svelte-xxwxiz-wave{0%{transform:translateY(0%)}100%{transform:translateY(-5%)}}@media(prefers-reduced-motion: reduce){.wave1.svelte-xxwxiz.svelte-xxwxiz,.wave2.svelte-xxwxiz.svelte-xxwxiz,.square.svelte-xxwxiz.svelte-xxwxiz{animation:none}}
ul.svelte-1emtgb4{margin:0 0 1em 0;line-height:1.5}
.content.svelte-h6ymk4 h2{font-size:1.4em;font-weight:500}table, caption, tbody, tfoot, thead, tr, th, td{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}table{border-collapse:collapse;border-spacing:0}table{border-collapse:collapse;width:100%}tr{border-bottom:1px solid #ccc}th{font-weight:bold}th, td{text-align:left;padding:4px}
nav.svelte-zdczvv{border-bottom:1px solid rgba(160, 177, 255, 0.486);font-weight:300;padding:0 1em;max-height:57px}ul.svelte-zdczvv::after{content:"";display:block;clear:both}li.svelte-zdczvv{display:block;float:left;height:57px}.selected.svelte-zdczvv{position:relative;display:inline-block}.selected.svelte-zdczvv::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(24, 119, 243);display:block;bottom:-1px}a.svelte-zdczvv{text-decoration:none;padding:1em 0.5em;display:block}
.GradientHeading.svelte-1kiplsl{background-image:linear-gradient(180deg, #5b5cf1, #21b3ff);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;line-height:0.9;transition:background-image 225ms ease;animation:svelte-1kiplsl-hue 10s infinite alternate;text-transform:uppercase;font-weight:700;white-space:normal;font-size:4.8rem}.dark-mode .GradientHeading{background-image:linear-gradient(to bottom, #f15b74, #ff6021)}@keyframes svelte-1kiplsl-hue{from{-webkit-filter:hue-rotate(0deg)}to{-webkit-filter:hue-rotate(-20deg)}}@media(min-width: 768px){.h1.svelte-1kiplsl{font-size:9.375em}}
.Row.svelte-15qlxh0{display:flex;align-items:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */