h1.svelte-13vgy2g,p.svelte-13vgy2g{margin:0 auto}h1.svelte-13vgy2g{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-13vgy2g{margin:1em auto}@media(min-width: 480px){h1.svelte-13vgy2g{font-size:4em}}
ul.svelte-1emtgb4{margin:0 0 1em 0;line-height:1.5}
.content.svelte-h6ymk4 h2{font-size:1.4em;font-weight:500}table, caption, tbody, tfoot, thead, tr, th, td{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}table{border-collapse:collapse;border-spacing:0}table{border-collapse:collapse;width:100%}tr{border-bottom:1px solid #ccc}th{font-weight:bold}th, td{text-align:left;padding:4px}
.GradientHeading.svelte-luhsqx{background-image:linear-gradient(180deg, #5b5cf1, #21b3ff);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;line-height:0.9;transition:background-image 225ms ease;animation:svelte-luhsqx-hue 10s infinite alternate;text-transform:uppercase;font-weight:700;white-space:normal;font-size:4.8em}.dark-mode .GradientHeading{background-image:linear-gradient(to bottom, #f15b74, #ff6021)}@keyframes svelte-luhsqx-hue{from{-webkit-filter:hue-rotate(0deg)}to{-webkit-filter:hue-rotate(-20deg)}}@media(min-width: 768px){.h1.svelte-luhsqx{font-size:9.375em}}
nav.svelte-1li8552{border-bottom:1px solid rgba(160, 177, 255, 0.486);font-weight:300;padding:0 1em;max-height:57px}ul.svelte-1li8552::after{content:"";display:block;clear:both}li.svelte-1li8552{display:block;float:left;height:57px}.selected.svelte-1li8552{position:relative;display:inline-block}.selected.svelte-1li8552::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(24, 119, 243);display:block;bottom:-1px}a.svelte-1li8552{text-decoration:none;padding:1em 0.5em;display:block}
header.svelte-w085my{background-image:linear-gradient(225deg, #010220 0%, #000000 100%);height:80vh;overflow:hidden;position:relative}.wave1.svelte-w085my{position:absolute;bottom:-30%;width:100%;animation:svelte-w085my-wave 4s ease infinite alternate}.wave2.svelte-w085my{position:absolute;bottom:-20%;width:100%;animation:svelte-w085my-wave 2s ease infinite alternate, svelte-w085my-hue 5s ease infinite;animation-delay:0.2s}.intro.svelte-w085my{position:absolute;bottom:10%}.figure-holder.svelte-w085my{position:absolute;right:30%;top:30%}.square.svelte-w085my{height:82px;width:82px;opacity:0.4;transform:rotate(45deg);border:10px solid #ffffff;box-shadow:inset 0 1px 3px 0 rgba(0, 0, 0, 0.5);filter:blur(8px);animation:svelte-w085my-rotate 8s linear infinite;margin-left:80px}.triangle.svelte-w085my{opacity:0.9;animation:svelte-w085my-hover 4s ease alternate infinite}.polygon.svelte-w085my{opacity:0.9;animation:svelte-w085my-rotateStep 5s steps(1, end) infinite;position:absolute;left:-100px;top:0;filter:blur(8px)}.waves.svelte-w085my{opacity:0.6}.logo_container.svelte-w085my{max-height:52px;display:flex}.logo_container > img{max-height:52px}@media(min-width: 768px){header.svelte-w085my{clip-path:polygon(0 0, 100% 0, 100% 80%, 0% 100%)}.intro.svelte-w085my{bottom:50%}}@keyframes svelte-w085my-hover{from{transform:translateY(0)}to{transform:translateY(-20%)}}@keyframes svelte-w085my-rotateStep{0%{transform:rotate(0)}20%{transform:rotate(72deg)}40%{transform:rotate(144deg)}60%{transform:rotate(216deg)}80%{transform:rotate(288deg)}100%{transform:rotate(360deg)}}@keyframes svelte-w085my-rotate{from{transform:rotate(0)}to{transform:rotate(1turn)}}@keyframes svelte-w085my-hue{from{-webkit-filter:hue-rotate(0deg)}to{-webkit-filter:hue-rotate(-360deg)}}@keyframes svelte-w085my-wave{0%{transform:translateY(0%)}100%{transform:translateY(-5%)}}@media(prefers-reduced-motion: reduce){.wave1.svelte-w085my,.wave2.svelte-w085my,.square.svelte-w085my{animation:none}}.author.svelte-w085my{bottom:15%}@media(max-width: 768px){.author.svelte-w085my{bottom:0%;right:-150px;max-height:150px}}
.Row.svelte-15qlxh0{display:flex;align-items:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */