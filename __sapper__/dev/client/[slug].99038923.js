import { S as SvelteComponentDev, i as init, d as dispatch_dev, I as globals, s as safe_not_equal, J as onMount, v as validate_slots, e as element, o as text, n as space, p as create_component, q as query_selector_all, a as claim_element, b as children, u as claim_text, f as detach_dev, r as claim_space, w as claim_component, h as add_location, g as attr_dev, x as append_dev, j as insert_dev, y as mount_component, t as transition_in, m as transition_out, z as destroy_component, E as set_data_dev } from './client.cc498d7b.js';
import { G as GradientHeading } from './GradientHeading.9cbde54b.js';

/* src\routes\blog\[slug].svelte generated by Svelte v3.21.0 */

const { console: console_1, document: document_1 } = globals;
const file = "src\\routes\\blog\\[slug].svelte";

// (442:2) <GradientHeading>
function create_default_slot(ctx) {
	let t_value = /*post*/ ctx[0].title + "";
	let t;

	const block = {
		c: function create() {
			t = text(t_value);
		},
		l: function claim(nodes) {
			t = claim_text(nodes, t_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*post*/ 1 && t_value !== (t_value = /*post*/ ctx[0].title + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(442:2) <GradientHeading>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let title_value;
	let style;
	let t0;
	let t1;
	let div1;
	let t2;
	let div0;
	let raw_value = /*post*/ ctx[0].html + "";
	let current;
	document_1.title = title_value = /*post*/ ctx[0].title;

	const gradientheading = new GradientHeading({
			props: {
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			style = element("style");
			t0 = text("code[class*=\"language-\"],\r\n    pre[class*=\"language-\"] {\r\n      color: #f8f8f2;\r\n      background: none;\r\n      text-shadow: 0 1px rgba(0, 0, 0, 0.3);\r\n      font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\r\n      font-size: 1em;\r\n      text-align: left;\r\n      white-space: pre;\r\n      word-spacing: normal;\r\n      word-break: normal;\r\n      word-wrap: normal;\r\n      line-height: 1.5;\r\n\r\n      -moz-tab-size: 4;\r\n      -o-tab-size: 4;\r\n      tab-size: 4;\r\n\r\n      -webkit-hyphens: none;\r\n      -moz-hyphens: none;\r\n      -ms-hyphens: none;\r\n      hyphens: none;\r\n    }\r\n\r\n    /* Code blocks */\r\n    pre[class*=\"language-\"] {\r\n      padding: 1em;\r\n      margin: 0.5em 0;\r\n      margin-bottom: 1.55rem;\r\n      overflow: auto;\r\n      border-radius: 0.3em;\r\n    }\r\n\r\n    :not(pre) > code[class*=\"language-\"],\r\n    pre[class*=\"language-\"] {\r\n      background: #272822;\r\n    }\r\n\r\n    /* Inline code */\r\n    :not(pre) > code[class*=\"language-\"] {\r\n      padding: 0.1em;\r\n      border-radius: 0.3em;\r\n      white-space: normal;\r\n    }\r\n\r\n    .token.comment,\r\n    .token.prolog,\r\n    .token.doctype,\r\n    .token.cdata {\r\n      color: slategray;\r\n    }\r\n\r\n    .token.punctuation {\r\n      color: #f8f8f2;\r\n    }\r\n\r\n    .namespace {\r\n      opacity: 0.7;\r\n    }\r\n\r\n    .token.property,\r\n    .token.tag,\r\n    .token.constant,\r\n    .token.symbol,\r\n    .token.deleted {\r\n      color: #f92672;\r\n    }\r\n\r\n    .token.boolean,\r\n    .token.number {\r\n      color: #ae81ff;\r\n    }\r\n\r\n    .token.selector,\r\n    .token.attr-name,\r\n    .token.string,\r\n    .token.char,\r\n    .token.builtin,\r\n    .token.inserted {\r\n      color: #a6e22e;\r\n    }\r\n\r\n    .token.operator,\r\n    .token.entity,\r\n    .token.url,\r\n    .language-css .token.string,\r\n    .style .token.string,\r\n    .token.variable {\r\n      color: #f8f8f2;\r\n    }\r\n\r\n    .token.atrule,\r\n    .token.attr-value,\r\n    .token.function,\r\n    .token.class-name {\r\n      color: #e6db74;\r\n    }\r\n\r\n    .token.keyword {\r\n      color: #66d9ef;\r\n    }\r\n\r\n    .token.regex,\r\n    .token.important {\r\n      color: #fd971f;\r\n    }\r\n\r\n    .token.important,\r\n    .token.bold {\r\n      font-weight: bold;\r\n    }\r\n    .token.italic {\r\n      font-style: italic;\r\n    }\r\n\r\n    .token.entity {\r\n      cursor: help;\r\n    }\r\n\r\n    p {\r\n      margin-bottom: 1.55rem;\r\n      font-size: 1.125rem;\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n      /* margin-top: 3.1rem;\r\n      margin-bottom: 1.55rem; */\r\n      font-weight: bold;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 2.375rem;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 2rem;\r\n    }\r\n\r\n    .content > * {\r\n      margin-bottom: 1.55rem;\r\n    }\r\n\r\n    img {\r\n      box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\r\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 0px 50px rgba(0, 0, 0, 0.12);\r\n      border-radius: 4px;\r\n      width: 100%;\r\n    }\r\n\r\n    .anchor {\r\n      position: relative;\r\n    }\r\n\r\n    .anchor > svg {\r\n      position: absolute;\r\n      left: 0;\r\n      transform: translateY(85%) translateX(-125%) rotate(-45deg);\r\n      transition: opacity 200ms ease, background-color 200ms ease 100ms;\r\n      opacity: 0;\r\n      background: none;\r\n    }\r\n\r\n    .anchor:hover > svg {\r\n      opacity: 0.75;\r\n      background: gray;\r\n    }");
			t1 = space();
			div1 = element("div");
			create_component(gradientheading.$$.fragment);
			t2 = space();
			div0 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-stmhy3\"]", document_1.head);
			style = claim_element(head_nodes, "STYLE", {});
			var style_nodes = children(style);
			t0 = claim_text(style_nodes, "code[class*=\"language-\"],\r\n    pre[class*=\"language-\"] {\r\n      color: #f8f8f2;\r\n      background: none;\r\n      text-shadow: 0 1px rgba(0, 0, 0, 0.3);\r\n      font-family: Consolas, Monaco, \"Andale Mono\", \"Ubuntu Mono\", monospace;\r\n      font-size: 1em;\r\n      text-align: left;\r\n      white-space: pre;\r\n      word-spacing: normal;\r\n      word-break: normal;\r\n      word-wrap: normal;\r\n      line-height: 1.5;\r\n\r\n      -moz-tab-size: 4;\r\n      -o-tab-size: 4;\r\n      tab-size: 4;\r\n\r\n      -webkit-hyphens: none;\r\n      -moz-hyphens: none;\r\n      -ms-hyphens: none;\r\n      hyphens: none;\r\n    }\r\n\r\n    /* Code blocks */\r\n    pre[class*=\"language-\"] {\r\n      padding: 1em;\r\n      margin: 0.5em 0;\r\n      margin-bottom: 1.55rem;\r\n      overflow: auto;\r\n      border-radius: 0.3em;\r\n    }\r\n\r\n    :not(pre) > code[class*=\"language-\"],\r\n    pre[class*=\"language-\"] {\r\n      background: #272822;\r\n    }\r\n\r\n    /* Inline code */\r\n    :not(pre) > code[class*=\"language-\"] {\r\n      padding: 0.1em;\r\n      border-radius: 0.3em;\r\n      white-space: normal;\r\n    }\r\n\r\n    .token.comment,\r\n    .token.prolog,\r\n    .token.doctype,\r\n    .token.cdata {\r\n      color: slategray;\r\n    }\r\n\r\n    .token.punctuation {\r\n      color: #f8f8f2;\r\n    }\r\n\r\n    .namespace {\r\n      opacity: 0.7;\r\n    }\r\n\r\n    .token.property,\r\n    .token.tag,\r\n    .token.constant,\r\n    .token.symbol,\r\n    .token.deleted {\r\n      color: #f92672;\r\n    }\r\n\r\n    .token.boolean,\r\n    .token.number {\r\n      color: #ae81ff;\r\n    }\r\n\r\n    .token.selector,\r\n    .token.attr-name,\r\n    .token.string,\r\n    .token.char,\r\n    .token.builtin,\r\n    .token.inserted {\r\n      color: #a6e22e;\r\n    }\r\n\r\n    .token.operator,\r\n    .token.entity,\r\n    .token.url,\r\n    .language-css .token.string,\r\n    .style .token.string,\r\n    .token.variable {\r\n      color: #f8f8f2;\r\n    }\r\n\r\n    .token.atrule,\r\n    .token.attr-value,\r\n    .token.function,\r\n    .token.class-name {\r\n      color: #e6db74;\r\n    }\r\n\r\n    .token.keyword {\r\n      color: #66d9ef;\r\n    }\r\n\r\n    .token.regex,\r\n    .token.important {\r\n      color: #fd971f;\r\n    }\r\n\r\n    .token.important,\r\n    .token.bold {\r\n      font-weight: bold;\r\n    }\r\n    .token.italic {\r\n      font-style: italic;\r\n    }\r\n\r\n    .token.entity {\r\n      cursor: help;\r\n    }\r\n\r\n    p {\r\n      margin-bottom: 1.55rem;\r\n      font-size: 1.125rem;\r\n    }\r\n\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6 {\r\n      /* margin-top: 3.1rem;\r\n      margin-bottom: 1.55rem; */\r\n      font-weight: bold;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 2.375rem;\r\n    }\r\n\r\n    h2 {\r\n      font-size: 2rem;\r\n    }\r\n\r\n    .content > * {\r\n      margin-bottom: 1.55rem;\r\n    }\r\n\r\n    img {\r\n      box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n        0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n        0 22.3px 17.9px rgba(0, 0, 0, 0.072),\r\n        0 41.8px 33.4px rgba(0, 0, 0, 0.086), 0 0px 50px rgba(0, 0, 0, 0.12);\r\n      border-radius: 4px;\r\n      width: 100%;\r\n    }\r\n\r\n    .anchor {\r\n      position: relative;\r\n    }\r\n\r\n    .anchor > svg {\r\n      position: absolute;\r\n      left: 0;\r\n      transform: translateY(85%) translateX(-125%) rotate(-45deg);\r\n      transition: opacity 200ms ease, background-color 200ms ease 100ms;\r\n      opacity: 0;\r\n      background: none;\r\n    }\r\n\r\n    .anchor:hover > svg {\r\n      opacity: 0.75;\r\n      background: gray;\r\n    }");
			style_nodes.forEach(detach_dev);
			head_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(gradientheading.$$.fragment, div1_nodes);
			t2 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(style, file, 263, 2, 7802);
			attr_dev(div0, "class", "content svelte-h6ymk4");
			add_location(div0, file, 443, 2, 11325);
			attr_dev(div1, "class", "container mx-auto max-w-2xl px-4 py-8 lg:py-24 lg:px-8");
			add_location(div1, file, 440, 0, 11200);
		},
		m: function mount(target, anchor) {
			append_dev(document_1.head, style);
			append_dev(style, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, div1, anchor);
			mount_component(gradientheading, div1, null);
			append_dev(div1, t2);
			append_dev(div1, div0);
			div0.innerHTML = raw_value;
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*post*/ 1) && title_value !== (title_value = /*post*/ ctx[0].title)) {
				document_1.title = title_value;
			}

			const gradientheading_changes = {};

			if (dirty & /*$$scope, post*/ 3) {
				gradientheading_changes.$$scope = { dirty, ctx };
			}

			gradientheading.$set(gradientheading_changes);
			if ((!current || dirty & /*post*/ 1) && raw_value !== (raw_value = /*post*/ ctx[0].html + "")) div0.innerHTML = raw_value;		},
		i: function intro(local) {
			if (current) return;
			transition_in(gradientheading.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(gradientheading.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			detach_dev(style);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div1);
			destroy_component(gradientheading);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload({ params, query }) {
	// the `slug` parameter is available because
	// this file is called [slug].svelte
	const res = await this.fetch(`blog/${params.slug}.json`);

	const data = await res.json();
	console.log(params.slug);

	if (res.status === 200) {
		return { post: data };
	} else {
		this.error(res.status, data.message);
	}
}

function instance($$self, $$props, $$invalidate) {
	let { post } = $$props;
	console.log(post);

	onMount(() => {
		(function () {
			if (typeof self === "undefined" || !self.Prism || !self.document) {
				return;
			}

			/**
 * Plugin name which is used as a class name for <pre> which is activating the plugin
 * @type {String}
 */
			var PLUGIN_NAME = "line-numbers";

			/**
 * Regular expression used for determining line breaks
 * @type {RegExp}
 */
			var NEW_LINE_EXP = /\n(?!$)/g;

			/**
 * Resizes line numbers spans according to height of line of code
 * @param {Element} element <pre> element
 */
			var _resizeElement = function (element) {
				var codeStyles = getStyles(element);
				var whiteSpace = codeStyles["white-space"];

				if (whiteSpace === "pre-wrap" || whiteSpace === "pre-line") {
					var codeElement = element.querySelector("code");
					var lineNumbersWrapper = element.querySelector(".line-numbers-rows");

					if (!codeElement || !lineNumbersWrapper) {
						return;
					}

					var lineNumberSizer = element.querySelector(".line-numbers-sizer");
					var codeLines = codeElement.textContent.split(NEW_LINE_EXP);

					if (!lineNumberSizer) {
						lineNumberSizer = document.createElement("span");
						lineNumberSizer.className = "line-numbers-sizer";
						codeElement.appendChild(lineNumberSizer);
					}

					lineNumberSizer.style.display = "block";

					codeLines.forEach(function (line, lineNumber) {
						lineNumberSizer.textContent = line || "\n";
						var lineSize = lineNumberSizer.getBoundingClientRect().height;
						lineNumbersWrapper.children[lineNumber].style.height = lineSize + "px";
					});

					lineNumberSizer.textContent = "";
					lineNumberSizer.style.display = "none";
				}
			};

			/**
 * Returns style declarations for the element
 * @param {Element} element
 */
			var getStyles = function (element) {
				if (!element) {
					return null;
				}

				return window.getComputedStyle
				? getComputedStyle(element)
				: element.currentStyle || null;
			};

			window.addEventListener("resize", function () {
				Array.prototype.forEach.call(document.querySelectorAll("pre." + PLUGIN_NAME), _resizeElement);
			});

			Prism.hooks.add("complete", function (env) {
				if (!env.code) {
					return;
				}

				var code = env.element;
				var pre = code.parentNode;

				// works only for <code> wrapped inside <pre> (not inline)
				if (!pre || !(/pre/i).test(pre.nodeName)) {
					return;
				}

				// Abort if line numbers already exists
				if (code.querySelector(".line-numbers-rows")) {
					return;
				}

				var addLineNumbers = false;
				var lineNumbersRegex = /(?:^|\s)line-numbers(?:\s|$)/;

				for (var element = code; element; element = element.parentNode) {
					if (lineNumbersRegex.test(element.className)) {
						addLineNumbers = true;
						break;
					}
				}

				// only add line numbers if <code> or one of its ancestors has the `line-numbers` class
				if (!addLineNumbers) {
					return;
				}

				// Remove the class 'line-numbers' from the <code>
				code.className = code.className.replace(lineNumbersRegex, " ");

				// Add the class 'line-numbers' to the <pre>
				if (!lineNumbersRegex.test(pre.className)) {
					pre.className += " line-numbers";
				}

				var match = env.code.match(NEW_LINE_EXP);
				var linesNum = match ? match.length + 1 : 1;
				var lineNumbersWrapper;
				var lines = new Array(linesNum + 1).join("<span></span>");
				lineNumbersWrapper = document.createElement("span");
				lineNumbersWrapper.setAttribute("aria-hidden", "true");
				lineNumbersWrapper.className = "line-numbers-rows";
				lineNumbersWrapper.innerHTML = lines;

				if (pre.hasAttribute("data-start")) {
					pre.style.counterReset = "linenumber " + (parseInt(pre.getAttribute("data-start"), 10) - 1);
				}

				env.element.appendChild(lineNumbersWrapper);
				_resizeElement(pre);
				Prism.hooks.run("line-numbers", env);
			});

			Prism.hooks.add("line-numbers", function (env) {
				env.plugins = env.plugins || {};
				env.plugins.lineNumbers = true;
			});

			/**
 * Global exports
 */
			Prism.plugins.lineNumbers = {
				/**
 * Returns the node of the given line number in the given element.
 * @param {Element} element A `<pre>` element with line numbers.
 * @param {Number} number
 * @returns {Element | undefined}
 */
				getLine(element, number) {
					if (element.tagName !== "PRE" || !element.classList.contains(PLUGIN_NAME)) {
						return;
					}

					var lineNumberRows = element.querySelector(".line-numbers-rows");
					var lineNumberStart = parseInt(element.getAttribute("data-start"), 10) || 1;
					var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);

					if (number < lineNumberStart) {
						number = lineNumberStart;
					}

					if (number > lineNumberEnd) {
						number = lineNumberEnd;
					}

					var lineIndex = number - lineNumberStart;
					return lineNumberRows.children[lineIndex];
				},
				/**
 * Resizes the line numbers of the given element.
 *
 * This function will not add line numbers. It will only resize existing ones.
 * @param {Element} element A `<pre>` element with line numbers.
 * @returns {void}
 */
				resize(element) {
					_resizeElement(element);
				}
			};
		})();
	});

	const writable_props = ["post"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<U5Bslugu5D> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("U5Bslugu5D", $$slots, []);

	$$self.$set = $$props => {
		if ("post" in $$props) $$invalidate(0, post = $$props.post);
	};

	$$self.$capture_state = () => ({ preload, onMount, GradientHeading, post });

	$$self.$inject_state = $$props => {
		if ("post" in $$props) $$invalidate(0, post = $$props.post);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [post];
}

class U5Bslugu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { post: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bslugu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*post*/ ctx[0] === undefined && !("post" in props)) {
			console_1.warn("<U5Bslugu5D> was created without expected prop 'post'");
		}
	}

	get post() {
		throw new Error("<U5Bslugu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set post(value) {
		throw new Error("<U5Bslugu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bslugu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
