.content.svelte-vk4cgb h2{font-size:1.4em;font-weight:500}table, caption, tbody, tfoot, thead, tr, th, td{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}table{border-collapse:collapse;border-spacing:0}table{border-collapse:collapse}tr{border-bottom:1px solid #ccc}th, td{text-align:left;padding:4px;font-weight:bold}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3NsdWddLmI0NWY2YzY3LmNzcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9ibG9nL1tzbHVnXS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG4gIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zLCBxdWVyeSB9KSB7XG4gICAgLy8gdGhlIGBzbHVnYCBwYXJhbWV0ZXIgaXMgYXZhaWxhYmxlIGJlY2F1c2VcbiAgICAvLyB0aGlzIGZpbGUgaXMgY2FsbGVkIFtzbHVnXS5zdmVsdGVcbiAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmZldGNoKGBibG9nLyR7cGFyYW1zLnNsdWd9Lmpzb25gKTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcblxuICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHtcbiAgICAgIHJldHVybiB7IHBvc3Q6IGRhdGEgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lcnJvcihyZXMuc3RhdHVzLCBkYXRhLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuPC9zY3JpcHQ+XG5cbjxzY3JpcHQ+XG4gIGltcG9ydCBHcmFkaWVudEhlYWRpbmcgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvR3JhZGllbnRIZWFkaW5nLnN2ZWx0ZVwiO1xuICBleHBvcnQgbGV0IHBvc3Q7XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAvKlxuXHRcdEJ5IGRlZmF1bHQsIENTUyBpcyBsb2NhbGx5IHNjb3BlZCB0byB0aGUgY29tcG9uZW50LFxuXHRcdGFuZCBhbnkgdW51c2VkIHN0eWxlcyBhcmUgZGVhZC1jb2RlLWVsaW1pbmF0ZWQuXG5cdFx0SW4gdGhpcyBwYWdlLCBTdmVsdGUgY2FuJ3Qga25vdyB3aGljaCBlbGVtZW50cyBhcmVcblx0XHRnb2luZyB0byBhcHBlYXIgaW5zaWRlIHRoZSB7e3twb3N0Lmh0bWx9fX0gYmxvY2ssXG5cdFx0c28gd2UgaGF2ZSB0byB1c2UgdGhlIDpnbG9iYWwoLi4uKSBtb2RpZmllciB0byB0YXJnZXRcblx0XHRhbGwgZWxlbWVudHMgaW5zaWRlIC5jb250ZW50XG5cdCovXG4gIC5jb250ZW50IDpnbG9iYWwoaDIpIHtcbiAgICBmb250LXNpemU6IDEuNGVtO1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cblxuICA6Z2xvYmFsKHRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkKSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBmb250OiBpbmhlcml0O1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgfVxuICA6Z2xvYmFsKHRhYmxlKSB7XG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICBib3JkZXItc3BhY2luZzogMDtcbiAgfVxuXG4gIDpnbG9iYWwodGFibGUpIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICB9XG4gIDpnbG9iYWwodHIpIHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcbiAgfVxuICA6Z2xvYmFsKHRoLCB0ZCkge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZzogNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG48L3N0eWxlPlxuXG48c3ZlbHRlOmhlYWQ+XG4gIDx0aXRsZT57cG9zdC50aXRsZX08L3RpdGxlPlxuICA8c3R5bGU+XG4gICAgY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0sXG4gICAgcHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSB7XG4gICAgICBjb2xvcjogI2Y4ZjhmMjtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICB0ZXh0LXNoYWRvdzogMCAxcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICAgICAgZm9udC1mYW1pbHk6IENvbnNvbGFzLCBNb25hY28sIFwiQW5kYWxlIE1vbm9cIiwgXCJVYnVudHUgTW9ub1wiLCBtb25vc3BhY2U7XG4gICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB3aGl0ZS1zcGFjZTogcHJlO1xuICAgICAgd29yZC1zcGFjaW5nOiBub3JtYWw7XG4gICAgICB3b3JkLWJyZWFrOiBub3JtYWw7XG4gICAgICB3b3JkLXdyYXA6IG5vcm1hbDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG5cbiAgICAgIC1tb3otdGFiLXNpemU6IDQ7XG4gICAgICAtby10YWItc2l6ZTogNDtcbiAgICAgIHRhYi1zaXplOiA0O1xuXG4gICAgICAtd2Via2l0LWh5cGhlbnM6IG5vbmU7XG4gICAgICAtbW96LWh5cGhlbnM6IG5vbmU7XG4gICAgICAtbXMtaHlwaGVuczogbm9uZTtcbiAgICAgIGh5cGhlbnM6IG5vbmU7XG4gICAgfVxuXG4gICAgLyogQ29kZSBibG9ja3MgKi9cbiAgICBwcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcbiAgICAgIHBhZGRpbmc6IDFlbTtcbiAgICAgIG1hcmdpbjogMC41ZW0gMDtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgYm9yZGVyLXJhZGl1czogMC4zZW07XG4gICAgfVxuXG4gICAgOm5vdChwcmUpID4gY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0sXG4gICAgcHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjMjcyODIyO1xuICAgIH1cblxuICAgIC8qIElubGluZSBjb2RlICovXG4gICAgOm5vdChwcmUpID4gY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0ge1xuICAgICAgcGFkZGluZzogMC4xZW07XG4gICAgICBib3JkZXItcmFkaXVzOiAwLjNlbTtcbiAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgfVxuXG4gICAgLnRva2VuLmNvbW1lbnQsXG4gICAgLnRva2VuLnByb2xvZyxcbiAgICAudG9rZW4uZG9jdHlwZSxcbiAgICAudG9rZW4uY2RhdGEge1xuICAgICAgY29sb3I6IHNsYXRlZ3JheTtcbiAgICB9XG5cbiAgICAudG9rZW4ucHVuY3R1YXRpb24ge1xuICAgICAgY29sb3I6ICNmOGY4ZjI7XG4gICAgfVxuXG4gICAgLm5hbWVzcGFjZSB7XG4gICAgICBvcGFjaXR5OiAwLjc7XG4gICAgfVxuXG4gICAgLnRva2VuLnByb3BlcnR5LFxuICAgIC50b2tlbi50YWcsXG4gICAgLnRva2VuLmNvbnN0YW50LFxuICAgIC50b2tlbi5zeW1ib2wsXG4gICAgLnRva2VuLmRlbGV0ZWQge1xuICAgICAgY29sb3I6ICNmOTI2NzI7XG4gICAgfVxuXG4gICAgLnRva2VuLmJvb2xlYW4sXG4gICAgLnRva2VuLm51bWJlciB7XG4gICAgICBjb2xvcjogI2FlODFmZjtcbiAgICB9XG5cbiAgICAudG9rZW4uc2VsZWN0b3IsXG4gICAgLnRva2VuLmF0dHItbmFtZSxcbiAgICAudG9rZW4uc3RyaW5nLFxuICAgIC50b2tlbi5jaGFyLFxuICAgIC50b2tlbi5idWlsdGluLFxuICAgIC50b2tlbi5pbnNlcnRlZCB7XG4gICAgICBjb2xvcjogI2E2ZTIyZTtcbiAgICB9XG5cbiAgICAudG9rZW4ub3BlcmF0b3IsXG4gICAgLnRva2VuLmVudGl0eSxcbiAgICAudG9rZW4udXJsLFxuICAgIC5sYW5ndWFnZS1jc3MgLnRva2VuLnN0cmluZyxcbiAgICAuc3R5bGUgLnRva2VuLnN0cmluZyxcbiAgICAudG9rZW4udmFyaWFibGUge1xuICAgICAgY29sb3I6ICNmOGY4ZjI7XG4gICAgfVxuXG4gICAgLnRva2VuLmF0cnVsZSxcbiAgICAudG9rZW4uYXR0ci12YWx1ZSxcbiAgICAudG9rZW4uZnVuY3Rpb24sXG4gICAgLnRva2VuLmNsYXNzLW5hbWUge1xuICAgICAgY29sb3I6ICNlNmRiNzQ7XG4gICAgfVxuXG4gICAgLnRva2VuLmtleXdvcmQge1xuICAgICAgY29sb3I6ICM2NmQ5ZWY7XG4gICAgfVxuXG4gICAgLnRva2VuLnJlZ2V4LFxuICAgIC50b2tlbi5pbXBvcnRhbnQge1xuICAgICAgY29sb3I6ICNmZDk3MWY7XG4gICAgfVxuXG4gICAgLnRva2VuLmltcG9ydGFudCxcbiAgICAudG9rZW4uYm9sZCB7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgLnRva2VuLml0YWxpYyB7XG4gICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgfVxuXG4gICAgLnRva2VuLmVudGl0eSB7XG4gICAgICBjdXJzb3I6IGhlbHA7XG4gICAgfVxuICA8L3N0eWxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGRpdiBjbGFzcz1cImNvbnRhaW5lciBweS0yNCBsZzpweS0yNCBweC00IG14LWF1dG8gbWF4LXctNnhsXCI+XG4gIDxHcmFkaWVudEhlYWRpbmc+e3Bvc3QudGl0bGV9PC9HcmFkaWVudEhlYWRpbmc+XG5cbiAgPGRpdiBjbGFzcz1cImNvbnRlbnRcIj5cbiAgICB7QGh0bWwgcG9zdC5odG1sfVxuICA8L2Rpdj5cbjwvZGl2PlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCRSxzQkFBUSxDQUFDLEFBQVEsRUFBRSxBQUFFLENBQUMsQUFDcEIsU0FBUyxDQUFFLEtBQUssQ0FDaEIsV0FBVyxDQUFFLEdBQUcsQUFDbEIsQ0FBQyxBQUVPLCtDQUErQyxBQUFFLENBQUMsQUFDeEQsTUFBTSxDQUFFLENBQUMsQ0FDVCxPQUFPLENBQUUsQ0FBQyxDQUNWLE1BQU0sQ0FBRSxDQUFDLENBQ1QsU0FBUyxDQUFFLElBQUksQ0FDZixJQUFJLENBQUUsT0FBTyxDQUNiLGNBQWMsQ0FBRSxRQUFRLEFBQzFCLENBQUMsQUFDTyxLQUFLLEFBQUUsQ0FBQyxBQUNkLGVBQWUsQ0FBRSxRQUFRLENBQ3pCLGNBQWMsQ0FBRSxDQUFDLEFBQ25CLENBQUMsQUFFTyxLQUFLLEFBQUUsQ0FBQyxBQUNkLGVBQWUsQ0FBRSxRQUFRLEFBQzNCLENBQUMsQUFDTyxFQUFFLEFBQUUsQ0FBQyxBQUNYLGFBQWEsQ0FBRSxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQUFDL0IsQ0FBQyxBQUNPLE1BQU0sQUFBRSxDQUFDLEFBQ2YsVUFBVSxDQUFFLElBQUksQ0FDaEIsT0FBTyxDQUFFLEdBQUcsQ0FDWixXQUFXLENBQUUsSUFBSSxBQUNuQixDQUFDIn0= */