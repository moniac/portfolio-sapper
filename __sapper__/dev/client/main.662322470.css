h1.svelte-13vgy2g,p.svelte-13vgy2g{margin:0 auto}h1.svelte-13vgy2g{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-13vgy2g{margin:1em auto}@media(min-width: 480px){h1.svelte-13vgy2g{font-size:4em}}
header.svelte-7rby0j{background-image:linear-gradient(225deg, #010220 0%, #000000 100%);height:80vh;overflow:hidden;position:relative}.wave1.svelte-7rby0j{position:absolute;bottom:-30%;width:100%;animation:svelte-7rby0j-wave 4s ease infinite alternate}.wave2.svelte-7rby0j{position:absolute;bottom:-20%;width:100%;animation:svelte-7rby0j-wave 2s ease infinite alternate, svelte-7rby0j-hue 5s ease infinite;animation-delay:0.2s}.intro.svelte-7rby0j{position:absolute;bottom:10%}.figure-holder.svelte-7rby0j{position:absolute;right:30%;top:30%}.square.svelte-7rby0j{height:82px;width:82px;opacity:0.4;transform:rotate(45deg);border:10px solid #ffffff;filter:blur(12px);animation:svelte-7rby0j-rotate 8s linear infinite;margin-left:80px}.triangle.svelte-7rby0j{opacity:0.9;animation:svelte-7rby0j-hover 4s ease alternate infinite}.polygon.svelte-7rby0j{opacity:0.9;animation:svelte-7rby0j-rotate 5s linear infinite reverse;position:absolute;left:-100px;top:0;filter:blur(8px)}.waves.svelte-7rby0j{opacity:0.6}.logo_container.svelte-7rby0j{max-height:52px;display:flex}.logo_container > img{max-height:52px}@media(min-width: 768px){header.svelte-7rby0j{clip-path:polygon(0 0, 100% 0, 100% 80%, 0% 100%)}.intro.svelte-7rby0j{bottom:50%}}@keyframes svelte-7rby0j-hover{from{transform:translateY(0)}to{transform:translateY(-20%)}}@keyframes svelte-7rby0j-rotateStep{0%{transform:rotate(0)}20%{transform:rotate(72deg)}40%{transform:rotate(144deg)}60%{transform:rotate(216deg)}80%{transform:rotate(288deg)}100%{transform:rotate(360deg)}}@keyframes svelte-7rby0j-rotate{from{transform:rotate(0)}to{transform:rotate(1turn)}}@keyframes svelte-7rby0j-hue{from{-webkit-filter:hue-rotate(0deg)}to{-webkit-filter:hue-rotate(-360deg)}}@keyframes svelte-7rby0j-wave{0%{transform:translateY(0%)}100%{transform:translateY(-5%)}}@media(prefers-reduced-motion: reduce){.wave1.svelte-7rby0j,.wave2.svelte-7rby0j,.square.svelte-7rby0j{animation:none}}
ul.svelte-1emtgb4{margin:0 0 1em 0;line-height:1.5}
.content.svelte-h6ymk4 h2{font-size:1.4em;font-weight:500}table, caption, tbody, tfoot, thead, tr, th, td{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}table{border-collapse:collapse;border-spacing:0}table{border-collapse:collapse;width:100%}tr{border-bottom:1px solid #ccc}th{font-weight:bold}th, td{text-align:left;padding:4px}
nav.svelte-zdczvv{border-bottom:1px solid rgba(160, 177, 255, 0.486);font-weight:300;padding:0 1em;max-height:57px}ul.svelte-zdczvv::after{content:"";display:block;clear:both}li.svelte-zdczvv{display:block;float:left;height:57px}.selected.svelte-zdczvv{position:relative;display:inline-block}.selected.svelte-zdczvv::after{position:absolute;content:"";width:calc(100% - 1em);height:2px;background-color:rgb(24, 119, 243);display:block;bottom:-1px}a.svelte-zdczvv{text-decoration:none;padding:1em 0.5em;display:block}
.GradientHeading.svelte-1kiplsl{background-image:linear-gradient(180deg, #5b5cf1, #21b3ff);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;line-height:0.9;transition:background-image 225ms ease;animation:svelte-1kiplsl-hue 10s infinite alternate;text-transform:uppercase;font-weight:700;white-space:normal;font-size:4.8rem}.dark-mode .GradientHeading{background-image:linear-gradient(to bottom, #f15b74, #ff6021)}@keyframes svelte-1kiplsl-hue{from{-webkit-filter:hue-rotate(0deg)}to{-webkit-filter:hue-rotate(-20deg)}}@media(min-width: 768px){.h1.svelte-1kiplsl{font-size:9.375em}}
.Row.svelte-15qlxh0{display:flex;align-items:center}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */